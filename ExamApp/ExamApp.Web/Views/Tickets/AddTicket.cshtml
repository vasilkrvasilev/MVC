@model ExamApp.Web.Models.TicketPostModel

@{
    ViewBag.Title = "AddTicket";
}

<h2>Ticketing System</h2>

<h2>Add Ticket</h2>

@using (Html.BeginForm("PostTicket", "Tickets"))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    
    @*@Html.Label("CategoryLabel", "Select by Category")
    @(Html.Kendo()
        .DropDownList()
        .Name("CategoryId")
        .DataTextField("Name")
        .DataValueField("Id")
        .CascadeFrom("categories")
        .DataSource(data =>
        {
            data.Read(read =>
                {
                    read.Action("GetCategories", "Categories")
                        .Data("cascadeCategories");
                })
                .ServerFiltering(true);
        }))*@
    
    @Html.LabelFor(model => model.CategoryId, "Category", new { @class = "control-label" })
    @Html.DropDownList("CategoryId")
    @Html.ValidationMessageFor(model => model.CategoryId, null, new { @class = "help-inline" })
    
    @Html.LabelFor(model => model.Title, new { @class = "control-label" })
    @Html.EditorFor(model => model.Title)
    @Html.ValidationMessageFor(model => model.Title, null, new { @class = "help-inline" })
    
    @Html.LabelFor(model => model.Priority, new { @class = "control-label" })
    @Html.DropDownListFor(model => model.Priority, new SelectList(Enum.GetValues(typeof(ExamApp.Models.Priority)), ExamApp.Models.Priority.Medium))
    @Html.ValidationMessageFor(model => model.Priority, null, new { @class = "help-inline" })
    
    @*@Html.Label("PriorityLabel", "Select by Priority")
    @(Html.Kendo().DropDownList()
              .Name("Priority")
              .BindTo(new SelectList(Enum.GetValues(typeof(ExamApp.Models.Priority))))
        )*@
    
    @Html.LabelFor(model => model.Description, new { @class = "control-label" })
    @Html.TextAreaFor(model => model.Description)
    @Html.ValidationMessageFor(model => model.Description, null, new { @class = "help-inline" })
    
    @Html.LabelFor(model => model.ScreenShot, new { @class = "control-label" })
    @Html.EditorFor(model => model.ScreenShot)
    @Html.ValidationMessageFor(model => model.ScreenShot, null, new { @class = "help-inline" })
    <br />
    <input type="submit" value="Add Ticket" />
}

<script>
    function cascadeCategories() {
        return {
            categoryId: $('#categories').val()
        }
    }
</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
